{"version":3,"sources":["http-common.js","services/TutorialService.js","components/AddTutorial.js","components/Tutorial.js","components/TutorialsList.js","App.js","reportWebVitals.js","index.js"],"names":["axios","create","baseURL","headers","http","get","id","data","post","put","delete","AddTutorial","initialTutorialState","title","author","useState","tutorial","setTutorial","submitted","setSubmitted","handleInputChange","event","target","name","value","className","onClick","htmlFor","type","required","onChange","TutorialDataService","then","response","console","log","catch","e","Tutorial","props","currentTutorial","setCurrentTutorial","message","setMessage","useEffect","match","params","history","push","TutorialsList","tutorials","setTutorials","tutorialsRef","useRef","current","retrieveTutorials","openTutorial","rowIndex","deleteTutorial","confirmAlert","buttons","label","newTutorials","splice","columns","useMemo","Header","accessor","Cell","rowIdx","row","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","column","getHeaderProps","render","i","getRowProps","cells","cell","getCellProps","App","href","to","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6f095b0a.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://localhost:3001\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\",\r\n  },\r\n});\r\n","import http from \"../http-common\";\r\n\r\nconst getAll = () => {\r\n  return http.get(\"/posts\");\r\n};\r\n\r\nconst get = (id) => {\r\n  return http.get(`/posts/${id}`);\r\n};\r\n\r\nconst create = (data) => {\r\n  return http.post(\"/posts\", data);\r\n};\r\n\r\nconst update = (id, data) => {\r\n  return http.put(`/posts/${id}`, data);\r\n};\r\n\r\nconst remove = (id) => {\r\n  return http.delete(`/posts/${id}`);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  get,\r\n  create,\r\n  update,\r\n  remove,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport TutorialDataService from \"../services/TutorialService\";\r\n\r\nconst AddTutorial = () => {\r\n  const initialTutorialState = {\r\n    id: null,\r\n    title: \"\",\r\n    author: \"\",\r\n  };\r\n  const [tutorial, setTutorial] = useState(initialTutorialState);\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const handleInputChange = (event) => {\r\n    debugger;\r\n    const { name, value } = event.target;\r\n    setTutorial({ ...tutorial, [name]: value });\r\n  };\r\n\r\n  const saveTutorial = () => {\r\n    var data = {\r\n      title: tutorial.title,\r\n      author: tutorial.author,\r\n    };\r\n\r\n    TutorialDataService.create(data)\r\n      .then((response) => {\r\n        setTutorial({\r\n          id: response.data.id,\r\n          title: response.data.title,\r\n          author: response.data.author,\r\n        });\r\n        setSubmitted(true);\r\n        console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const newTutorial = () => {\r\n    setTutorial(initialTutorialState);\r\n    setSubmitted(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"submit-form\">\r\n      {submitted ? (\r\n        <div>\r\n          <h4>You submitted successfully!</h4>\r\n          <button className=\"btn btn-success\" onClick={newTutorial}>\r\n            Add\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"title\"\r\n              required\r\n              value={tutorial.title}\r\n              onChange={handleInputChange}\r\n              name=\"title\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"author\">Author</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"author\"\r\n              required\r\n              value={tutorial.author}\r\n              onChange={handleInputChange}\r\n              name=\"author\"\r\n            />\r\n          </div>\r\n          <div className=\"btn-css\">\r\n            <button onClick={saveTutorial} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTutorial;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport TutorialDataService from \"../services/TutorialService\";\r\n\r\nconst Tutorial = (props) => {\r\n  const initialTutorialState = {\r\n    id: null,\r\n    title: \"\",\r\n    author: \"\",\r\n  };\r\n  const [currentTutorial, setCurrentTutorial] = useState(initialTutorialState);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const getTutorial = (id) => {\r\n    TutorialDataService.get(id)\r\n      .then((response) => {\r\n        setCurrentTutorial(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTutorial(props.match.params.id);\r\n  }, [props.match.params.id]);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setCurrentTutorial({ ...currentTutorial, [name]: value });\r\n  };\r\n\r\n  const updateTutorial = () => {\r\n    TutorialDataService.update(currentTutorial.id, currentTutorial)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setMessage(\"The tutorial was updated successfully!\");\r\n        props.history.push(\"/tutorials\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {currentTutorial ? (\r\n        <div className=\"edit-form\">\r\n          <h4>Tutorial</h4>\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"title\">Title</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"title\"\r\n                name=\"title\"\r\n                value={currentTutorial.title}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n          </form>\r\n\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"author\">Author</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"author\"\r\n                name=\"author\"\r\n                value={currentTutorial.author}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n          </form>\r\n          <div className=\"btn-css\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-success\"\r\n              onClick={updateTutorial}\r\n            >\r\n              Update\r\n            </button>\r\n          </div>\r\n          <p>{message}</p>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <br />\r\n          <p>Please click on a Tutorial...</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tutorial;\r\n","import React, { useState, useEffect, useMemo, useRef } from \"react\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport TutorialDataService from \"../services/TutorialService\";\r\nimport { useTable } from \"react-table\";\r\n\r\nconst TutorialsList = (props) => {\r\n  const [tutorials, setTutorials] = useState([]);\r\n  const tutorialsRef = useRef();\r\n\r\n  tutorialsRef.current = tutorials;\r\n\r\n  useEffect(() => {\r\n    retrieveTutorials();\r\n  }, []);\r\n\r\n  const retrieveTutorials = () => {\r\n    TutorialDataService.getAll()\r\n      .then((response) => {\r\n        setTutorials(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const openTutorial = (rowIndex) => {\r\n    const id = tutorialsRef.current[rowIndex].id;\r\n    props.history.push(\"/tutorials/\" + id);\r\n  };\r\n\r\n  const deleteTutorial = (rowIndex) => {\r\n    confirmAlert({\r\n      title: \"Confirm to delete\",\r\n      message: \"Are you sure to do this.\",\r\n      buttons: [\r\n        {\r\n          label: \"Yes\",\r\n          onClick: () => {\r\n            const id = tutorialsRef.current[rowIndex].id;\r\n\r\n            TutorialDataService.remove(id)\r\n              .then((response) => {\r\n                props.history.push(\"/tutorials\");\r\n\r\n                let newTutorials = [...tutorialsRef.current];\r\n                newTutorials.splice(rowIndex, 1);\r\n\r\n                setTutorials(newTutorials);\r\n              })\r\n              .catch((e) => {\r\n                console.log(e);\r\n              });\r\n          },\r\n        },\r\n        {\r\n          label: \"No\",\r\n          onClick: () => {},\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Id\",\r\n        accessor: \"id\",\r\n      },\r\n      {\r\n        Header: \"Title\",\r\n        accessor: \"title\",\r\n      },\r\n      {\r\n        Header: \"Author\",\r\n        accessor: \"author\",\r\n      },\r\n      {\r\n        Header: \"Actions\",\r\n        accessor: \"actions\",\r\n        Cell: (props) => {\r\n          const rowIdx = props.row.id;\r\n          return (\r\n            <div>\r\n              <span onClick={() => openTutorial(rowIdx)}>\r\n                <i className=\"far fa-edit action mr-2\"></i>\r\n              </span>\r\n\r\n              <span onClick={() => deleteTutorial(rowIdx)}>\r\n                <i className=\"fas fa-trash action\"></i>\r\n              </span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n    useTable({\r\n      columns,\r\n      data: tutorials,\r\n    });\r\n\r\n  return (\r\n    <div className=\"list row\">\r\n      <div className=\"col-md-12 list\">\r\n        <table\r\n          className=\"table table-striped table-bordered\"\r\n          {...getTableProps()}\r\n        >\r\n          <thead>\r\n            {headerGroups.map((headerGroup) => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map((column) => (\r\n                  <th {...column.getHeaderProps()}>\r\n                    {column.render(\"Header\")}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {rows.map((row, i) => {\r\n              prepareRow(row);\r\n              return (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map((cell) => {\r\n                    return (\r\n                      <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TutorialsList;\r\n","import React from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport \"@fortawesome/fontawesome-free/js/all.js\";\n\nimport AddTutorial from \"./components/AddTutorial\";\nimport Tutorial from \"./components/Tutorial\";\nimport TutorialsList from \"./components/TutorialsList\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <a href=\"/tutorials\" className=\"navbar-brand\">\n          CRUD Operation\n        </a>\n        <div className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to={\"/tutorials\"} className=\"nav-link\">\n              Tutorials\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={\"/add\"} className=\"nav-link\">\n              Add\n            </Link>\n          </li>\n        </div>\n      </nav>\n\n      <div className=\"container mt-3\">\n        <Switch>\n          <Route exact path={[\"/\", \"/tutorials\"]} component={TutorialsList} />\n          <Route exact path=\"/add\" component={AddTutorial} />\n          <Route path=\"/tutorials/:id\" component={Tutorial} />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}